{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaolorunnipa/Downloads/React Guide/firebase-chat-app/src/pages/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport addImage from '../images/add.png';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { auth } from \"../firebase\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const storage = getStorage();\n      const storageRef = ref(storage, 'images/rivers.jpg');\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on('state_changed', snapshot => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {// Handle unsuccessful uploads\n      }, () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File available at', downloadURL);\n        });\n      });\n    } catch (e) {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'formContainer',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'formWrapper',\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'logo',\n        children: \"Dev Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'title',\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Display Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: 'none'\n          },\n          type: \"file\",\n          id: 'file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: addImage,\n            alt: \"Add Avi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Something went wrong..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"AvrsuJm02Cqlq6/LWpvA21zDecQ=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/joshuaolorunnipa/Downloads/React Guide/firebase-chat-app/src/pages/Register.jsx"],"names":["addImage","createUserWithEmailAndPassword","getStorage","ref","uploadBytesResumable","getDownloadURL","auth","useState","Register","error","setError","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","storage","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","then","downloadURL","display"],"mappings":"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","sourcesContent":["import addImage from '../images/add.png';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport {auth} from \"../firebase\";\nimport {useState} from \"react\";\n\nconst Register = () => {\n    const [error, setError] = useState(false);\n\n    const handleSubmit =  async (e) => {\n        e.preventDefault();\n\n        const displayName = e.target[0].value;\n        const email = e.target[1].value;\n        const password = e.target[2].value;\n        const file = e.target[3].files[0];\n        \n        try {\n            const res = await createUserWithEmailAndPassword(auth, email, password);\n\n            const storage = getStorage();\n            const storageRef = ref(storage, 'images/rivers.jpg');\n\n            const uploadTask = uploadBytesResumable(storageRef, file);\n\n            uploadTask.on('state_changed',\n                (snapshot) => {\n                    // Observe state change events such as progress, pause, and resume\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    console.log('Upload is ' + progress + '% done');\n                    switch (snapshot.state) {\n                        case 'paused':\n                            console.log('Upload is paused');\n                            break;\n                        case 'running':\n                            console.log('Upload is running');\n                            break;\n                    }\n                },\n                (error) => {\n                    // Handle unsuccessful uploads\n                },\n                () => {\n                    // Handle successful uploads on complete\n                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                        console.log('File available at', downloadURL);\n                    });\n                }\n            );\n        } catch (e) {\n            setError(true)\n        }\n\n        \n\n\n    }\n    return (\n        <div className={'formContainer'}>\n            <div className={'formWrapper'}>\n                <span className={'logo'}>Dev Chat</span>\n                <span className={'title'}>Register</span>\n                <form onSubmit={handleSubmit} action=\"\">\n                    <input type=\"text\" placeholder={\"Display Name\"}/>\n                    <input type=\"email\" placeholder={\"email\"}/>\n                    <input type=\"password\" placeholder={\"password\"}/>\n                    <input style={{display: 'none'}} type=\"file\" id={'file'}/>\n                    <label htmlFor=\"file\">\n                        <img src={addImage} alt=\"Add Avi\"/>\n                        <span>Add Avatar</span>\n                    </label>\n                    <button>Sign up</button>\n                </form>\n                {error && <span>Something went wrong..</span>}\n                <p>Already have an account? Login</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}